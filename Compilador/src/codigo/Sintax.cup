package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Entero, Real, Cadena, Boleano, Nulo, Si, Entonces, Sino, Devolver, Verdadero, Falso, Desde,
    Mientras, Incrementar, Decrementar, Hacer, Escribir, Clase, Extiende, Incluir, Propiedades, Metodos,
    Publicas, Privadas, Protegidas, Principal, Eliminar, Instanciar, Constructor, Destructor, Igual, Suma,
    Resta, Multiplicacion, Division, Modulo, Exponenciacion, Incremento, Decremento, Comparador, Diferente,
    MenorIgual, MayorIgual, Mayor, Menor, And, Or, DosPuntos, PuntoComa, ParentesisA, ParentesisC, CorcheteA,
    CorcheteC, LlaveA, LlaveC, Coma, Punto, Identificador, IdClase, NumEntero, NumReal, CadenaT, Tabulador, 
    Comillas, Linea, ERROR;

non terminal CODIGO, DECLARACION_NUM, VAR, TIPO_N, VALOR_N, DECLARACION_CADENA
;
non terminal DECLARACION, ASIGNACION
;

start with CODIGO;

CODIGO ::=
    DECLARACION |
    ASIGNACION |
    DECLARACION CODIGO |
    ASIGNACION CODIGO 
;

DECLARACION ::=
    DECLARACION_NUM |
    DECLARACION_CADENA
;
DECLARACION_CADENA ::= 
    Cadena VAR PuntoComa |
    Cadena VAR |
    Cadena VAR Igual VALOR_N PuntoComa |
    Cadena VAR Igual VALOR_N |
    Cadena VAR Igual CadenaT PuntoComa |
    Cadena VAR Igual CadenaT
;
DECLARACION_NUM ::= 
    TIPO_N VAR PuntoComa |
    TIPO_N VAR |
    TIPO_N VAR Igual VALOR_N PuntoComa |
    TIPO_N VAR Igual VALOR_N
;
VAR ::=
    Identificador |
    Identificador Coma VAR
;
TIPO_N ::=
    Entero |
    Real |
    Boleano
;
VALOR_N ::=
    NumEntero |
    NumReal |
    Verdadero |
    Falso
;

ASIGNACION ::=
    VAR Igual VALOR_N PuntoComa |
    VAR Igual VALOR_N
;